name: Release

# Only run on version tags (vX.Y.Z)
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'  # Matches v1.2.3 but not v0.1.0-rc.1

permissions:
  contents: write

jobs:
  # Simple build and test job
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Test
        run: go test -v -short ./...

  # Optional: Simple release job (uncomment when needed)
  # release:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0

  #     - name: Set up Go
  #       uses: actions/setup-go@v4
  #       with:
  #         go-version: '1.21'


  #     - name: Run GoReleaser
  #       uses: goreleaser/goreleaser-action@v4
  #       with:
  #         distribution: goreleaser
  #         version: latest
  #         args: release --rm-dist
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# Note: For Terraform Registry publishing in the future:
# 1. Set up Terraform Cloud/Enterprise account
# 2. Add TF_TOKEN_app_terraform_io secret to GitHub
# 3. Uncomment and configure the release job above
#        with:
#          fetch-depth: 0
#
#      - name: Setup Terraform
#        uses: hashicorp/setup-terraform@v2
#
#      - name: Terraform Init
#        run: terraform init
#        working-directory: .release/terraform
#
#      - name: Terraform Apply
#        run: terraform apply -auto-approve
#        working-directory: .release/terraform
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          GITHUB_REPOSITORY: ${{ github.repository }}
#          GITHUB_REF: ${{ github.ref }}
#          TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}
